[{"authors":null,"categories":null,"content":"हृषीकेश राजेश तेरदाळकर  Hrishikesh is a research scholar at the Department of Computer Science and Engineering, IIT Kanpur working under the supervision of Prof. Arnab Bhattacharya. He completed his B.Sc. (Hons.) in Mathematics and Computer Science (2010) and M.Sc. in Computer Science (2013) from Chennai Mathematical Institute.\nHis current research interests include Natural Language Processing, Computational Linguistics, Information Retrieval, Data Mining and Artificial Intelligence. He is particularly interested in the Sanskrit language and several other Indian languages. He can read, write and speak Marathi, Sanskrit, Hindi and English. He likes building user-friendly GUIs and CLIs for academic and non-academic purposes.\n Download my resumé. -- ","date":1673222400,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1673222400,"objectID":"9e370bd7161e19b2ff5ea464c359c815","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"हृषीकेश राजेश तेरदाळकर  Hrishikesh is a research scholar at the Department of Computer Science and Engineering, IIT Kanpur working under the supervision of Prof. Arnab Bhattacharya. He completed his B.","tags":null,"title":"Hrishikesh Terdalkar","type":"authors"},{"authors":["Hrishikesh Terdalkar","Arnab Bhattacharya","Madhulika Dubey","Ramamurthy S","Bhavna Naneria Singh"],"categories":null,"content":"","date":1673222400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673222400,"objectID":"551adc5ffa8aac4dce57ee070323c60a","permalink":"/publication/wsc2023_1/","publishdate":"2022-01-12T00:00:00Z","relpermalink":"/publication/wsc2023_1/","section":"publication","summary":"Knowledge bases (KB) are an important resource in a number of natural language processing (NLP) and information retrieval (IR) tasks, such as semantic search, automated question-answering etc. They are also useful for researchers trying to gain information from a text. Unfortunately, however, the state-of-the-art in Sanskrit NLP does not yet allow automated construction of knowledge bases due to unavailability or lack of sufficient accuracy of tools and methods. Thus, in this work, we describe our efforts on manual annotation of Sanskrit text for the purpose of knowledge graph (KG) creation. We choose the chapter Dhānyavarga from Bhāvaprakāśanighaṇṭu of the Ayurvedic text Bhāvaprakāśa for annotation. The constructed knowledge graph contains 410 entities and 764 relationships. Since Bhāvaprakāśanighaṇṭu is a technical glossary text that describes various properties of different substances, we develop an elaborate ontology to capture the semantics of the entity and relationship types present in the text. To query the knowledge graph, we design 31 query templates that cover most of the common question patterns. For both manual annotation and querying, we customize the Sangrahaka framework previously developed by us. The entire system including the dataset is available from https://sanskrit.iitk.ac.in/ayurveda. We hope that the knowledge graph that we have created through manual annotation and subsequent curation will help in development and testing of NLP tools in future as well as studying of the Bhāvaprakāśanighaṇṭu text.","tags":["sanskrit","ayurveda","annotation","knowledge graph"],"title":"Semantic Annotation and Querying Framework based on Semi-structured Ayurvedic Text","type":"publication"},{"authors":["Hrishikesh Terdalkar"],"categories":["software"],"content":"PyCDSL is a python interface to Cologne Digital Sanskrit Lexicon (CDSL).\n Free software: GNU General Public License v3 Documentation: https://pycdsl.readthedocs.io.  Features  CDSL Corpus Management (Download, Update, Access) Unified interface to access all dictionaries available at CDSL Console command and REPL interface for easy dictionary search Extensive support for transliteration using indic-transliteration module  Usage PyCDSL can be used in a python project, as a console command and as an interactive REPL interface.\n","date":1643308200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1643308200,"objectID":"3c5cfab03c7c256a9bc9532d6500302a","permalink":"/project/pycdsl/","publishdate":"2022-01-28T00:00:00+05:30","relpermalink":"/project/pycdsl/","section":"project","summary":"PyCDSL is a python interface to Cologne Digital Sanskrit Lexicon (CDSL). It provides an unified method to download, update and programmatically access all the dictionaries available at CDSL. It also features a console command and a REPL interface to make dictionary search easy for non-programmers. PyCDSL has extensive support for transliteration using `indic-transliteration` module.","tags":["sanskrit","lexicon","python","software"],"title":"PyCDSL","type":"project"},{"authors":["Hrishikesh Terdalkar","Arnab Bhattacharya"],"categories":null,"content":"","date":1630022400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630022400,"objectID":"cb39e2ebbfca2a9f56c4f54311d1aa24","permalink":"/publication/fse2021/","publishdate":"2021-08-01T00:00:00Z","relpermalink":"/publication/fse2021/","section":"publication","summary":"We present a web-based tool *Sangrahaka* for annotating entities and relationships from text corpora towards construction of a knowledge graph and subsequent querying using templatized natural language questions.  The application is language and corpus agnostic, but can be tuned for specific needs of a language or a corpus.  The application is freely available for download and installation.  Besides having a user-friendly interface, it is fast, supports customization, and is fault tolerant on both client and server side.  It outperforms other annotation tools in an objective evaluation metric.  The framework has been successfully used in two annotation tasks.","tags":["software","annotation","querying","knowledge graph"],"title":"Sangrahaka: A Tool for Annotating and Querying Knowledge Graphs","type":"publication"},{"authors":["Hrishikesh Terdalkar"],"categories":["demo"],"content":"There are virtually unlimited options available for building a personal homepage. One can find several options based on the purpose, aesthetics, technologies and difficulty.\nSome of the easiest options include Google Sites, WordPress etc. If one wants to have a bit more control and customizability, there are static site builders like Hugo, Jekyll, Gatsby, etc. which can be hosted on GitHub Pages, Netlify etc. For an academic portfolio, I found \u0026ldquo;Hugo Academic\u0026rdquo; to be perfect, both aesthetically and feature-wise.\n\u0026ldquo;Hugo Academic\u0026rdquo; comes with an easy deployment option to Netlify, which doesn\u0026rsquo;t require the user to write any code. To deploy it to GitHub is not as straightforward and too many guides for too many versions might confuse a novice user. Here, I am listing down the steps I followed to setup this website.\nGet Started using GitHub Template  Install Hugo Go to \u0026ldquo;Hugo Academic\u0026rdquo; Starter Template Click on Use this template to create a repository www (you may choose a different name) Clone your repository locally git clone git@github.com:\u0026lt;your-username\u0026gt;/www.git www cd www git submodule update --init --recursive Create an empty repository \u0026lt;your-username\u0026gt;.github.io on GitHub, if you haven\u0026rsquo;t already.  Note: If you do not have GitHub premium, this must be a public repository in order to use GitHub Pages Set-up the GitHub Pages from repository settings.   Add the website repository as a submodule, git submodule add -f -b master git@github.com:\u0026lt;your-username\u0026gt;/\u0026lt;your-username\u0026gt;.github.io.git public Edit content in the content directory Test locally, hugo server Generate public pages, hugo. This will generate the static website in the public/ directory. Commit content to the submodule (website repository) first, cd public, git add . and git commit -m \u0026quot;Website\u0026quot; Commit content to the base repository, git add . and git commit -m \u0026quot;Content\u0026quot;  Reference Documentation: https://wowchemy.com/docs/\n Following are the contents of the sample post that come with the installation. I am keeping them here since they contain useful and detailed instructions.\nOriginal Instructions Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It\u0026rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  Create a new site Personalize your site Chat with the Wowchemy community or Hugo community Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy Request a feature or report a bug for Wowchemy Updating Wowchemy? View the Update Guide and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\nClick here to become a sponsor and help support Wowchemy\u0026rsquo;s future As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1628467200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628467200,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2021-08-09T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Setting up a personal academic portfolio using `Academic` theme for `Hugo` is really easy and results in an aesthetically pleasing website.","tags":["homepage","hugo","academic"],"title":"Setting up a personal academic homepage","type":"post"},{"authors":["Hrishikesh Terdalkar"],"categories":["software"],"content":" Free software: GNU General Public License v3 Documentation: https://google-drive-ocr.readthedocs.io.  Features  Perform OCR using Google\u0026rsquo;s Drive API v3 Class GoogleOCRApplication() for use in projects Highly configurable CLI Run OCR on a single image file Run OCR on multiple image files Run OCR on all images in directory Use multiple workers (multiprocessing) Work on a PDF document directly  Install To install Google OCR (Drive API v3), run this command in your terminal:\npip install google-drive-ocr  Note: One must setup a Google application and download client_secrets.json file before using google_drive_ocr.\nSetup  Create a project on Google Cloud Platform Wizard: https://console.developers.google.com/start/api?id=drive  Instructions  https://cloud.google.com/genomics/downloading-credentials-for-api-access Select application type as \u0026ldquo;Installed Application\u0026rdquo; Create credentials \u0026ldquo;OAuth consent screen\u0026rdquo; \u0026ndash;\u0026gt; \u0026ldquo;OAuth client ID\u0026rdquo; Save client_secret.json  Usage Using in a Project Create a GoogleOCRApplication application instance:\nfrom google_drive_ocr import GoogleOCRApplication app = GoogleOCRApplication('client_secret.json')  Perform OCR on a single image:\napp.perform_ocr('image.png')  Perform OCR on mupltiple images:\napp.perform_batch_ocr(['image_1.png', 'image_2.png', 'image_3.png'])  Perform OCR on multiple images using multiple workers (multiprocessing):\napp.perform_batch_ocr(['image_1.png', 'image_3.png', 'image_2.png'], workers=2)  Using Command Line Interface Typical usage with several options:\ngoogle-ocr --client-secret client_secret.json \\ --upload-folder-id \u0026lt;google-drive-folder-id\u0026gt; \\ --image-dir images/ --extension .jpg \\ --workers 4 --no-keep  Show help message with the full set of options:\ngoogle-ocr --help  Configuration The default location for configuration is ~/.gdo.cfg. If configuration is written to this location with a set of options, we don\u0026rsquo;t have to specify those options again on the subsequent runs.\nSave configuration and exit:\ngoogle-ocr --client-secret client_secret.json --write-config ~/.gdo.cfg  Read configuration from a custom location (if it was written to a custom location):\ngoogle-ocr --config ~/.my_config_file ..  Performing OCR Note: It is assumed that the client-secret option is saved in configuration file.\nSingle image file:\ngoogle-ocr -i image.png  Multiple image files:\ngoogle-ocr -b image_1.png image_2.png image_3.png  All image files from a directory with a specific extension:\ngoogle-ocr --image-dir images/ --extension .png  Multiple workers (multiprocessing):\ngoogle-ocr -b image_1.png image_2.png image_3.png --workers 2  PDF files:\ngoogle-ocr --pdf document.pdf --pages 1-3 5 7-10 13  ","date":1612895400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646245800,"objectID":"52b002973888d06b487098578101b613","permalink":"/post/perform-ocr-using-google-drive-api/","publishdate":"2021-02-10T00:00:00+05:30","relpermalink":"/post/perform-ocr-using-google-drive-api/","section":"post","summary":"Google's Drive API can be used to perform OCR on images from any language. `google-drive-ocr` is a python package that allows users to do this with utmost ease, right from the terminal.","tags":["google","ocr","python","software"],"title":"Google Drive OCR","type":"post"},{"authors":[],"categories":[],"content":"The word Jñānasaṅgraha (Devanagari: ज्ञानसङ्ग्रह) means \u0026lsquo;collection of knowledge\u0026rsquo;.\nThe Jñānasaṅgrahaḥ system is a platform developed at IIT Kanpur that hosts numerous applications related to Sanskrit.\nIt consists of the following components,\n Saṅkhyāpaddhatiḥ (सङ्ख्यापद्धतिः), a collection of ancient Indian alpha-syllabic numeral systems.  Kaṭapayādi Saṅkhyā, a Kaṭapayādi encoding-decoding system. Āryabhaṭīya Saṅkhyā, an Āryabhaṭīya encoding-decoding system. Bhūtasaṅkhyā, a Bhūtasaṅkhyā encoding-decoding system.   Chandojñānam (छन्दोज्ञानम्), a Sankrit prosodical meter identification system. Varṇajñānam (वर्णज्ञानम्), a collection of utility functions related to Sanskrit alphabet.  ","date":1603596600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1603596600,"objectID":"5b8752ee830d2b1172e1cc5ceafc65e6","permalink":"/project/jnanasangraha/","publishdate":"2020-10-25T09:00:00+05:30","relpermalink":"/project/jnanasangraha/","section":"project","summary":" The word Jñānasaṅgraha (Devanagari: ज्ञानसङ्ग्रह) means 'collection of knowledge'. The Jñānasaṅgrahaḥ system is a platform developed at IIT Kanpur that hosts numerous applications related to Sanskrit.","tags":["sanskrit"],"title":"Jñānasaṅgrahaḥ","type":"project"},{"authors":null,"categories":null,"content":"Annotation One of the ways of constructing a knowledge graph is through manual annotation. Languages whose state-of-the-art of NLP is not advanced enough for automatic construction often have to rely on the manual annotation. Benefits of annotation include the accuracy and reliability of data, construction of datasets which further help the research in the field of automatic construction of knowledge graphs, etc.\nSangrahaka Sangrahaka is a web-based tool for annotating entities and relationships from text corpora towards construction of a knowledge graph and subsequent querying using templatized natural language questions. It is a language and corpus agnostic tool. Salient features of the tool include an interface for annotation of entities and relationships, and an interface for querying using templatized natural language queries. The tool is also equipped with an administrators’ interface for managing user access levels, uploading corpora and ontology creation. There are utility scripts for language-specific or corpus-specific needs. The tool can be deployed on the web for distributed annotation by multiple annotators. Besides having a user-friendly interface, it is fast, supports customization, and is fault-tolerant on both client and server side. No programming knowledge is expected from an annotator.\nThe tool has been used in real-world annotation tasks and has received generally positive reviews.\n  Word-art of the comments received in a survey of Sangrahaka  ","date":1596240000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596240000,"objectID":"b2b522c0276f31a5a1ee8be9b4c8c04a","permalink":"/project/knowledge-graphs/","publishdate":"2020-08-01T00:00:00Z","relpermalink":"/project/knowledge-graphs/","section":"project","summary":"Knowledge Graphs (KGs) are knowledge bases stored using a graph data structure. KGs find application in several fields such as Natural Langugage Processing, Information Retrieval, Databases for the purpose of storage, management and querying of real world data. In this project, we explore ways of constructing and querying KGs.","tags":["annotation","software","knowledge graph","graph database"],"title":"Knowledge Graphs","type":"project"},{"authors":["Hrishikesh Terdalkar","Arnab Bhattacharya"],"categories":null,"content":"","date":1571788800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571788800,"objectID":"671d2f359b3294593071ba7b7e036e48","permalink":"/publication/iscls2019/","publishdate":"2019-10-23T00:00:00Z","relpermalink":"/publication/iscls2019/","section":"publication","summary":"Sanskrit (*Saṃskṛta*) enjoys one of the largest and most varied literature in the whole world. Extracting the knowledge from it, however, is a challenging task due to multiple reasons including complexity of the language and paucity of standard natural language processing tools. In this paper, we target the problem of building knowledge graphs for particular types of relationships from Saṃskṛta texts. We build a natural language question-answering system in Saṃskṛta that uses the knowledge graph to answer factoid questions. We design a framework for the overall system and implement two separate instances of the system on human relationships from Mahābhārata and Rāmāyaṇa, and one instance on synonymous relationships from Bhāvaprakāśa Nighaṇṭu, a technical text from Āyurveda. We show that about 50% of the factoid questions can be answered correctly by the system. More importantly, we analyse the shortcomings of the system in detail for each step, and discuss the possible ways forward.","tags":["sanskrit","question answering","knowledge graph"],"title":"Framework for Question-Answering in Sanskrit through Automated Construction of Knowledge Graphs","type":"publication"},{"authors":["Hrishikesh Terdalkar","Arnab Bhattacharya"],"categories":[],"content":"","date":1571788800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571788800,"objectID":"01496dd6aa227594109fc4b7a09176ae","permalink":"/publication/iscls2019demo/","publishdate":"2019-10-23T00:00:00Z","relpermalink":"/publication/iscls2019demo/","section":"publication","summary":"The *Kaṭapayādi* system of encoding numbers as words by replacing each digit by a character was developed in ancient India. We present a web-based system that for conversion to and from the *Kaṭapayādi* numbering scheme. It can both decode a word into its corresponding number, and can encode a number into word(s).","tags":["sanskrit","software"],"title":"KaTaPaYadi System","type":"publication"},{"authors":null,"categories":null,"content":"Sanskrit (Saṃskṛta) enjoys one of the largest and most varied literature in the whole world. Extracting the knowledge from it, however, is a challenging task due to multiple reasons including complexity of the language and paucity of standard natural language processing tools.\nIn this project, we target the problem of building general purpose knowledge graphs (KG) from Sanskrit texts as well as building natural language question answering systems on top of the constructed KGs.\n","date":1558569600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558569600,"objectID":"f1ff5051e5c8116f429119f01c690146","permalink":"/project/sanskrit/","publishdate":"2019-05-23T00:00:00Z","relpermalink":"/project/sanskrit/","section":"project","summary":"Sanskrit is one of the most ancient and richest languages in the world. Its literature boasts of text spanning every facet of life and contains works on mathematics, arts, sciences, religion, philosophy, etc. Unfortunately, the large volume of such works and the relative lack of proficiency in the language have kept treasures in those text hidden from the common man. Unraveling information from these texts in a targeted and systematic manner can not only help in enhancing the knowledge systems but can also revive an interest in the language.","tags":["sanskrit","knowledge graph","question answering","natural language processing"],"title":"Sanskrit Question Answering","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]